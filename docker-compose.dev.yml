version: '3.8'

services:
  app:
    container_name: nestjs-app-dev
    user: "root"
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app  # Mount local directory
      - /usr/src/app/node_modules  # Prevent overwriting node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://root:example@mongo:27017/chat-app?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URI=redis://redis:6379
    depends_on:
      - mongo
      - redis
    command: npm run start:dev  # Ensure it runs in watch mode

  mongo:
    container_name: mongo
    image: mongo:6.0
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - '6379:6379'
    restart: always
    volumes:
      - ./docker-conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
  
  kafka:
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

volumes:
  mongo-data:
